#!/usr/bin/env ruby

require 'rubygems' unless ENV['NO_RUBYGEMS']
require 'rubigen'

if %w(-v --version).include? ARGV.first
  require File.dirname(__FILE__) + "/../lib/howitzer"
  puts "#{File.basename($0)} #{Howitzer::VERSION}"
  exit(0)
end

require 'rubigen/scripts/generate'

require 'pp'
RubiGen::Base.use_application_sources!
RubiGen::Base.prepend_sources(*[
  RubiGen::PathSource.new(:app, File.join(File.dirname(__FILE__), "..", "generators"))
])

CORRECT_ARGS = %w[--cucumber --rspec]

if ARGV[0] == "install"
  ARGV.delete 'install'
  ARGV.each do |option|
    if option == '--cucumber'
      RubiGen::Scripts::Generate.new.run(%w[cucumber])
      RubiGen::Scripts::Generate.new.run(%w[root])
      RubiGen::Scripts::Generate.new.run(%w[config])
      RubiGen::Scripts::Generate.new.run(%w[pages])
      RubiGen::Scripts::Generate.new.run(%w[tasks])
      RubiGen::Scripts::Generate.new.run(%w[email])
    elsif option == '--rspec'
      #TODO add rspec generator
      puts "Rspec generator is not available"
    else
      puts "ERROR: no such generator with name: '#{option}' is available"
    end
  end
else
  puts "ERROR: no such command with name: '#{ARGV[0]} found'"
end
